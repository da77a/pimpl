[section The Basics]

As was already mentioned the ['Pimpl] idiom signature properties are 

* the separation of ['public interface] and ['private implementation] and then 
* implementation hiding. 

The main property is the ['separation]. In fact, [link 6 \[6\]] states it is the only "intent" of the pattern with the ['implementation hiding] listed only as pattern's applicability in the context of C++ ([link 6 \[6\]], the Bridge section).

The separation introduces two classes/objects -- the Handle and the Body ([link 5 \[5\]]), the interface proxy and the actual implementation, a level of indirection. Conceptually that "decouples an abstraction from its implementation" ([link 6 \[6\]]). In practical terms those two classes/objects complement each other and inherently coupled. They are yin and yang, part and parcel of the ['Pimpl] idiom. 

Consequently, the relationship between those two objects is an important part of the idiom (at the very least from the practical angle). The proxy-data relationship might exhibit the ['pointer semantics] where several proxy objects might be sharing access to one underlying data object. Alternatively, the proxy-data relationship might exhibit the ['value semantics] where every proxy object represents and corresponds to one underlying data object. Alternatively again, the proxy-data relationship might exhibit the ['copy-on-write semantics]. 

[important The established Object-Oriented programming paradigm -- the association between data and behavior -- is enshrined in the fundamental concept of an ['object] or a ['class] and is routinely seen and implemented as such -- one class. 

That one-class approach is not exactly ideal for purposes mentioned in the ['Introduction]. However, the fault-line where the ['Pimpl] splits the conventional class in two is not ['exactly] between ['data and behavior]. It is, rather, between ['public interface] (public behavior) and ['private implementation] (private data and behavior) -- two different views of a system. They serve different purposes and are better managed when kept separate. The ['Pimpl] technique seems to fit that objective better with ['actual] rather than ['notional] separation.]  

[endsect]

